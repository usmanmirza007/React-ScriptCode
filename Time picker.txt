import React, { useState, useEffect } from 'react';
import {
  View,
  Text,
  TouchableOpacity,
  StyleSheet,
  Image,
  Platform,
} from 'react-native';

import DateTimePicker from '@react-native-community/datetimepicker';
import moment from 'moment';

import colors from '../constants/colors';
import images from '../constants/images';

const TimePicker = ({updateTime, editTime}) => {

  const [time, setTime] = useState(new Date(1598051730000));
  const [mode, setMode] = useState('date');
  const [show, setShow] = useState(false);

  const onChange = (event, selectedDate) => {
    const currentTime = selectedDate || time;
    setShow(Platform.OS === 'ios');
    setTime(currentTime);
    updateTime(currentTime);

  };

  const showModeTime = (currentMode) => {
    setShow(true);
    setMode(currentMode);
  };

  const showTimePicker = () => {
    showModeTime('time');
  };

  return (
    <View>
      <View
        style={{
          flex: 1,
          marginBottom: 13,
        }}>
        <View style={{ flex: 0.5 }}>
          
          <TouchableOpacity
            style={{
              width: 140,
              height: 41,
              borderRadius: 5,
              borderWidth: 0.5,
              borderColor: colors.line,
              flexDirection: 'row',
              justifyContent: 'space-between',
              alignItems: 'center',
              marginTop: 13,
            }}
            onPress={showTimePicker}>
            <Text
              style={{
                fontSize: 15,
                marginLeft: 15,
                fontFamily: 'Montserrat-Medium',
              }}>
              {editTime ? moment(editTime, 'h:mm:ss a').format('h:mm:ss a') : moment(time).format('h:mm:ss a')}
              {/* sfd */}
            </Text>
            <Image
              style={{
                width: 18,
                height: 18,
                alignSelf: 'center',
                marginRight: 10,
              }}
              source={images.calendar}
            />
          </TouchableOpacity>
        </View>
      </View>
      
       {show && (
        <DateTimePicker
          testID="dateTimePicker"
          value={time}
          mode={mode}
          is24Hour={false}
          display="default"
          onChange={onChange}
        />
      )}
    </View>
  );
};
export default TimePicker;
