################## root ############################
import * as React from 'react';

export const navigationRef = React.createRef();

export function navigate(name, params) {
  navigationRef.current?.navigate(name, params);
}

export function getCurrentRouteName() {
  return navigationRef.current?.getCurrentRoute()?.name;
}

export function goBack() {
  navigationRef.current?.goBack();
}


################################### test ##############


function* addNewItem(action) {  
   try {
      const data = yield call(Api.addNewItem, action.payload);
      
      if (action.payload.subCategoryId) {
        yield put(Actions.getSubCategory(action.payload.categoryId, action.payload.subCategoryId));
      }

      yield put(Actions.getRestaurantMenu());
      yield put(Actions.addItemSuccess());

      yield put(ModalActions.showAddModal(false))
      if (RootNavigation.getCurrentRouteName() == "AddItem"){
        RootNavigation.goBack();
      }

    } catch (error) {
      yield put(Actions.requestFailed(error.message));
   }
}
###################################################

function* createNewCategory(action) {  
   try {

      var {categoryType, categoryName, subCategoryName} = action.payload;
      const data = yield call(Api.createNewCategory, categoryType, categoryName, subCategoryName);
      if (data?.subCatId) {
        RootNavigation.navigate('AddItem', {
          categoryId: data.catId,
          subCategoryId: data.subCatId,
        });
      } else {
        RootNavigation.navigate('AddItem', {categoryId: data.catId});
      }
      
      yield put(ModalActions.showAddModal(false))
      yield put(Actions.createNewCategorySuccess())
      
    } catch (error) {
      yield put(Actions.requestFailed(error.message));
   }
}