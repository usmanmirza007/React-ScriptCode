 addTask(category_id, parent_id, children_id, task_detail, task_points, task_rules) {
        //this.setState({ errorText: '', loading: true })
        if (this.state.category_id === '' || this.state.task_detail === '' || this.state.children_id === '' ||
        this.state.parent_id === '' || this.state.task_rules === '' || this.state.task_points === '') {
            return Alert.alert('Plase enter all feild')
        }
        else {
            this.setState({ loading: true })
            axios.post(`https://pcportal.malangis.com/public/api/addtask`,
                {
                    'category_id': category_id,
                    'task_detail': task_detail,
                    'children_id': children_id,
                    'parent_id': parent_id,
                    'task_rules': task_rules,
                    'task_points': task_points,
                }
            )
                .then((response) => {
                    console.log(response)
                    if (response.data.message === "Task assigned successfully") {

                        this.setState({ loading: false })
                        Alert.alert('User already Exist')
                        this.onSigupFail()
                    }
                    else {
                        this.onSignUpSuccess();
                    }
                })
        }
    }


    renderButton() {
        if (this.state.loading) {
            return <SpinnerScreen />
        }
        return (
            <TouchableOpacity
            style={{ height: 50, borderRadius: 5, marginRight: 18, backgroundColor: '#651fff', marginTop: 15, }}
                onPress={() => this.addTask(this.state.category_id, this.state.children_id,
                    this.state.parent_id, this.state.task_detail,
                    this.state.task_rules, this.state.task_points)}>
                    >
                    <Text style={{ fontSize: 20, color: '#fff', fontWeight: 'bold', alignSelf: 'center', marginTop: 10 }}>Add Task</Text>
            </TouchableOpacity>
        )
    }
    onSigupFail() {
        this.setState({ errorText: 'Authentication Failed.', loading: false })
    }
    onSignUpSuccess() {
        this.setState({
            
            loading: false,
            category_id: '',
            category_id: '',
            parent_id: '',
            task_detail: '',
            task_points: '',
            task_rules: '',
        })
        Alert.alert('Task Add Successfully')
        this.props.navigation.navigate('#')
    }

###################state################
 loading: false,
            category_id: '',
            task_detail: '',
            children_id: '',
            parent_id: '',
            task_rules: '',
            task_points: ''
################################################
################get api######################
  // _keyExtractor = (item, index) => item.id;
    // componentDidMount() {
    //     axios.get(`https://pcportal.malangis.com/public/api/categories`)
    //         .then(response => {
    //             const showData = response.data;

    //             this.setState({ showData })
    //             console.log(showData)
    //         })
    // }

########################flatlist###############
{/*<FlatList
                            style={{ padding: 10 }}
                            showsHorizontalScrollIndicator={false}
                            data={this.state.showData}
                            renderItem={this.renderRow}
                            keyExtractor={this._keyExtractor}
                        />*/}

#########################flatlist method############
 renderRow = ({ item }) => {
        return (
            <View style={{ borderColor: '#8852ff', borderRadius: 1, marginVertical: '3%', width: '95%', height: '8%', borderWidth: 2 }}>
                <Picker style={{ height: 30, padding: 5, }}
                    selectedValue={this.state.type}
                    onValueChange={(itemValue) =>
                        this.setState({ type: itemValue })}>
                    <Picker.Item label={item.list.title} value={item.list.title} />
                </Picker>
            </View>
        )
    }